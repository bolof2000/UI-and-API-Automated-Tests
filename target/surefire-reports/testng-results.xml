<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="26" passed="22" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-10-12T22:52:58 MDT" name="Surefire suite" finished-at="2021-10-12T23:05:31 MDT" duration-ms="753953">
    <groups>
    </groups>
    <test started-at="2021-10-12T22:52:58 MDT" name="Surefire test" finished-at="2021-10-12T23:05:31 MDT" duration-ms="753953">
      <class name="alltests.exercises.chapter11.windows.WindowTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.exercises.chapter11.windows.WindowTests@80169cf]" started-at="2021-10-12T23:04:50 MDT" name="setUp" finished-at="2021-10-12T23:04:52 MDT" duration-ms="1696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.exercises.chapter11.windows.WindowTests@80169cf]" started-at="2021-10-12T23:04:52 MDT" name="goHome" finished-at="2021-10-12T23:04:53 MDT" duration-ms="1212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testWindowTabs()[pri:0, instance:alltests.exercises.chapter11.windows.WindowTests@80169cf]" started-at="2021-10-12T23:04:53 MDT" name="testWindowTabs" finished-at="2021-10-12T23:04:54 MDT" duration-ms="487" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWindowTabs -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.exercises.chapter11.windows.WindowTests@80169cf]" started-at="2021-10-12T23:04:54 MDT" name="recordTestResults" finished-at="2021-10-12T23:04:54 MDT" duration-ms="295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWindowTabs status=SUCCESS method=WindowTests.testWindowTabs()[pri:0, instance:alltests.exercises.chapter11.windows.WindowTests@80169cf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.exercises.chapter11.windows.WindowTests@80169cf]" started-at="2021-10-12T23:04:54 MDT" name="tearDown" finished-at="2021-10-12T23:04:54 MDT" duration-ms="88" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.exercises.chapter11.windows.WindowTests -->
      <class name="alltests.exercises.chapter8.frames.FrameTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.exercises.chapter8.frames.FrameTests@8b87145]" started-at="2021-10-12T22:54:23 MDT" name="setUp" finished-at="2021-10-12T22:54:25 MDT" duration-ms="1277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.exercises.chapter8.frames.FrameTests@8b87145]" started-at="2021-10-12T22:54:25 MDT" name="goHome" finished-at="2021-10-12T22:54:26 MDT" duration-ms="1114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testFrameText()[pri:0, instance:alltests.exercises.chapter8.frames.FrameTests@8b87145]" started-at="2021-10-12T22:54:26 MDT" name="testFrameText" finished-at="2021-10-12T22:54:27 MDT" duration-ms="898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFrameText -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.exercises.chapter8.frames.FrameTests@8b87145]" started-at="2021-10-12T22:54:27 MDT" name="recordTestResults" finished-at="2021-10-12T22:54:27 MDT" duration-ms="136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFrameText status=SUCCESS method=FrameTests.testFrameText()[pri:0, instance:alltests.exercises.chapter8.frames.FrameTests@8b87145] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.exercises.chapter8.frames.FrameTests@8b87145]" started-at="2021-10-12T22:54:27 MDT" name="tearDown" finished-at="2021-10-12T22:54:27 MDT" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.exercises.chapter8.frames.FrameTests -->
      <class name="alltests.alerts.AlertTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.alerts.AlertTests@5fcd892a]" started-at="2021-10-12T22:54:18 MDT" name="setUp" finished-at="2021-10-12T22:54:20 MDT" duration-ms="1334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.alerts.AlertTests@5fcd892a]" started-at="2021-10-12T22:54:20 MDT" name="goHome" finished-at="2021-10-12T22:54:21 MDT" duration-ms="1165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testAcceptAlert()[pri:0, instance:alltests.alerts.AlertTests@5fcd892a]" started-at="2021-10-12T22:54:21 MDT" name="testAcceptAlert" finished-at="2021-10-12T22:54:21 MDT" duration-ms="286" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Results text incorrect expected [You successfuly clicked an alert] but found [You successfully clicked an alert]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Results text incorrect expected [You successfuly clicked an alert] but found [You successfully clicked an alert]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at alltests.alerts.AlertTests.testAcceptAlert(AlertTests.java:15)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAcceptAlert -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.alerts.AlertTests@5fcd892a]" started-at="2021-10-12T22:54:21 MDT" name="recordTestResults" finished-at="2021-10-12T22:54:21 MDT" duration-ms="380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAcceptAlert status=FAILURE method=AlertTests.testAcceptAlert()[pri:0, instance:alltests.alerts.AlertTests@5fcd892a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.alerts.AlertTests@5fcd892a]" started-at="2021-10-12T22:54:21 MDT" name="goHome" finished-at="2021-10-12T22:54:22 MDT" duration-ms="352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testGetTextFromAlert()[pri:0, instance:alltests.alerts.AlertTests@5fcd892a]" started-at="2021-10-12T22:54:22 MDT" name="testGetTextFromAlert" finished-at="2021-10-12T22:54:22 MDT" duration-ms="256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTextFromAlert -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.alerts.AlertTests@5fcd892a]" started-at="2021-10-12T22:54:22 MDT" name="recordTestResults" finished-at="2021-10-12T22:54:22 MDT" duration-ms="233" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGetTextFromAlert status=SUCCESS method=AlertTests.testGetTextFromAlert()[pri:0, instance:alltests.alerts.AlertTests@5fcd892a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.alerts.AlertTests@5fcd892a]" started-at="2021-10-12T22:54:22 MDT" name="goHome" finished-at="2021-10-12T22:54:23 MDT" duration-ms="264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSetInputInAlert()[pri:0, instance:alltests.alerts.AlertTests@5fcd892a]" started-at="2021-10-12T22:54:23 MDT" name="testSetInputInAlert" finished-at="2021-10-12T22:54:23 MDT" duration-ms="370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetInputInAlert -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.alerts.AlertTests@5fcd892a]" started-at="2021-10-12T22:54:23 MDT" name="recordTestResults" finished-at="2021-10-12T22:54:23 MDT" duration-ms="364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSetInputInAlert status=SUCCESS method=AlertTests.testSetInputInAlert()[pri:0, instance:alltests.alerts.AlertTests@5fcd892a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.alerts.AlertTests@5fcd892a]" started-at="2021-10-12T22:54:23 MDT" name="tearDown" finished-at="2021-10-12T22:54:23 MDT" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.alerts.AlertTests -->
      <class name="alltests.exercises.chapter10.javascript.JavaScriptTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.exercises.chapter10.javascript.JavaScriptTests@73d4cc9e]" started-at="2021-10-12T23:04:46 MDT" name="setUp" finished-at="2021-10-12T23:04:47 MDT" duration-ms="1424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.exercises.chapter10.javascript.JavaScriptTests@73d4cc9e]" started-at="2021-10-12T23:04:47 MDT" name="goHome" finished-at="2021-10-12T23:04:49 MDT" duration-ms="2094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testAddMultipleAttributeToDropdown()[pri:0, instance:alltests.exercises.chapter10.javascript.JavaScriptTests@73d4cc9e]" started-at="2021-10-12T23:04:49 MDT" name="testAddMultipleAttributeToDropdown" finished-at="2021-10-12T23:04:50 MDT" duration-ms="421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMultipleAttributeToDropdown -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.exercises.chapter10.javascript.JavaScriptTests@73d4cc9e]" started-at="2021-10-12T23:04:50 MDT" name="recordTestResults" finished-at="2021-10-12T23:04:50 MDT" duration-ms="316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddMultipleAttributeToDropdown status=SUCCESS method=JavaScriptTests.testAddMultipleAttributeToDropdown()[pri:0, instance:alltests.exercises.chapter10.javascript.JavaScriptTests@73d4cc9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.exercises.chapter10.javascript.JavaScriptTests@73d4cc9e]" started-at="2021-10-12T23:04:50 MDT" name="tearDown" finished-at="2021-10-12T23:04:50 MDT" duration-ms="82" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.exercises.chapter10.javascript.JavaScriptTests -->
      <class name="alltests.exercises.chapter9.wait.WaitTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.exercises.chapter9.wait.WaitTests@382db087]" started-at="2021-10-12T23:04:37 MDT" name="setUp" finished-at="2021-10-12T23:04:39 MDT" duration-ms="1652" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.exercises.chapter9.wait.WaitTests@382db087]" started-at="2021-10-12T23:04:39 MDT" name="goHome" finished-at="2021-10-12T23:04:40 MDT" duration-ms="1200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testWaitUntilVisible()[pri:0, instance:alltests.exercises.chapter9.wait.WaitTests@382db087]" started-at="2021-10-12T23:04:40 MDT" name="testWaitUntilVisible" finished-at="2021-10-12T23:04:46 MDT" duration-ms="5901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWaitUntilVisible -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.exercises.chapter9.wait.WaitTests@382db087]" started-at="2021-10-12T23:04:46 MDT" name="recordTestResults" finished-at="2021-10-12T23:04:46 MDT" duration-ms="118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWaitUntilVisible status=SUCCESS method=WaitTests.testWaitUntilVisible()[pri:0, instance:alltests.exercises.chapter9.wait.WaitTests@382db087] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.exercises.chapter9.wait.WaitTests@382db087]" started-at="2021-10-12T23:04:46 MDT" name="tearDown" finished-at="2021-10-12T23:04:46 MDT" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.exercises.chapter9.wait.WaitTests -->
      <class name="alltests.frames.FrameTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.frames.FrameTests@7dc222ae]" started-at="2021-10-12T22:53:28 MDT" name="setUp" finished-at="2021-10-12T22:53:30 MDT" duration-ms="1872" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.frames.FrameTests@7dc222ae]" started-at="2021-10-12T22:53:30 MDT" name="goHome" finished-at="2021-10-12T22:53:32 MDT" duration-ms="1906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testWysiwyg()[pri:0, instance:alltests.frames.FrameTests@7dc222ae]" started-at="2021-10-12T22:53:32 MDT" name="testWysiwyg" finished-at="2021-10-12T22:54:14 MDT" duration-ms="41918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWysiwyg -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.frames.FrameTests@7dc222ae]" started-at="2021-10-12T22:54:14 MDT" name="recordTestResults" finished-at="2021-10-12T22:54:14 MDT" duration-ms="291" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWysiwyg status=SUCCESS method=FrameTests.testWysiwyg()[pri:0, instance:alltests.frames.FrameTests@7dc222ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.frames.FrameTests@7dc222ae]" started-at="2021-10-12T22:54:14 MDT" name="tearDown" finished-at="2021-10-12T22:54:14 MDT" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.frames.FrameTests -->
      <class name="alltests.login.LoginTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.login.LoginTests@57f23557]" started-at="2021-10-12T23:05:19 MDT" name="setUp" finished-at="2021-10-12T23:05:21 MDT" duration-ms="1686" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.login.LoginTests@57f23557]" started-at="2021-10-12T23:05:21 MDT" name="goHome" finished-at="2021-10-12T23:05:23 MDT" duration-ms="2302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSuccessfulLogin()[pri:0, instance:alltests.login.LoginTests@57f23557]" started-at="2021-10-12T23:05:23 MDT" name="testSuccessfulLogin" finished-at="2021-10-12T23:05:24 MDT" duration-ms="1221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulLogin -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.login.LoginTests@57f23557]" started-at="2021-10-12T23:05:24 MDT" name="recordTestResults" finished-at="2021-10-12T23:05:24 MDT" duration-ms="166" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSuccessfulLogin status=SUCCESS method=LoginTests.testSuccessfulLogin()[pri:0, instance:alltests.login.LoginTests@57f23557] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.login.LoginTests@57f23557]" started-at="2021-10-12T23:05:24 MDT" name="goHome" finished-at="2021-10-12T23:05:25 MDT" duration-ms="312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testUnsuccessfulLogin()[pri:0, instance:alltests.login.LoginTests@57f23557]" started-at="2021-10-12T23:05:25 MDT" name="testUnsuccessfulLogin" finished-at="2021-10-12T23:05:26 MDT" duration-ms="806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnsuccessfulLogin -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.login.LoginTests@57f23557]" started-at="2021-10-12T23:05:26 MDT" name="recordTestResults" finished-at="2021-10-12T23:05:26 MDT" duration-ms="135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUnsuccessfulLogin status=SUCCESS method=LoginTests.testUnsuccessfulLogin()[pri:0, instance:alltests.login.LoginTests@57f23557] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.login.LoginTests@57f23557]" started-at="2021-10-12T23:05:26 MDT" name="tearDown" finished-at="2021-10-12T23:05:26 MDT" duration-ms="89" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.login.LoginTests -->
      <class name="alltests.keys.KeysTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.keys.KeysTests@15bfd87]" started-at="2021-10-12T23:05:08 MDT" name="setUp" finished-at="2021-10-12T23:05:10 MDT" duration-ms="1590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.keys.KeysTests@15bfd87]" started-at="2021-10-12T23:05:10 MDT" name="goHome" finished-at="2021-10-12T23:05:11 MDT" duration-ms="1271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testBackspace()[pri:0, instance:alltests.keys.KeysTests@15bfd87]" started-at="2021-10-12T23:05:11 MDT" name="testBackspace" finished-at="2021-10-12T23:05:11 MDT" duration-ms="395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBackspace -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.keys.KeysTests@15bfd87]" started-at="2021-10-12T23:05:11 MDT" name="recordTestResults" finished-at="2021-10-12T23:05:12 MDT" duration-ms="389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBackspace status=SUCCESS method=KeysTests.testBackspace()[pri:0, instance:alltests.keys.KeysTests@15bfd87] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.keys.KeysTests@15bfd87]" started-at="2021-10-12T23:05:12 MDT" name="goHome" finished-at="2021-10-12T23:05:12 MDT" duration-ms="156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testPi()[pri:0, instance:alltests.keys.KeysTests@15bfd87]" started-at="2021-10-12T23:05:12 MDT" name="testPi" finished-at="2021-10-12T23:05:12 MDT" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPi -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.keys.KeysTests@15bfd87]" started-at="2021-10-12T23:05:12 MDT" name="recordTestResults" finished-at="2021-10-12T23:05:12 MDT" duration-ms="199" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPi status=SUCCESS method=KeysTests.testPi()[pri:0, instance:alltests.keys.KeysTests@15bfd87] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.keys.KeysTests@15bfd87]" started-at="2021-10-12T23:05:12 MDT" name="tearDown" finished-at="2021-10-12T23:05:13 MDT" duration-ms="159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.keys.KeysTests -->
      <class name="alltests.alerts.FileUploadTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.alerts.FileUploadTests@aecb35a]" started-at="2021-10-12T22:54:14 MDT" name="setUp" finished-at="2021-10-12T22:54:16 MDT" duration-ms="1734" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.alerts.FileUploadTests@aecb35a]" started-at="2021-10-12T22:54:16 MDT" name="goHome" finished-at="2021-10-12T22:54:17 MDT" duration-ms="1133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testFileUpload()[pri:0, instance:alltests.alerts.FileUploadTests@aecb35a]" started-at="2021-10-12T22:54:17 MDT" name="testFileUpload" finished-at="2021-10-12T22:54:18 MDT" duration-ms="484" status="FAIL">
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument: File not found : /Users/angie/workspace/test_automation_u/webdriver_java/resources/chromedriver
  (Session info: chrome=94.0.4606.81)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Bolofindes-MacBook-Pro.local', ip: '2601:285:c100:e3d0:90bb:f00d:4542:2f74%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '11.5', java.version: '16.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 94.0.4606.81, chrome: {chromedriverVersion: 94.0.4606.61 (418b78f5838ed..., userDataDir: /var/folders/_t/8jmbmg3x60l...}, goog:chromeOptions: {debuggerAddress: localhost:52271}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 2bb81a98617337aa32ad159a488b4229]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument: File not found : /Users/angie/workspace/test_automation_u/webdriver_java/resources/chromedriver
  (Session info: chrome=94.0.4606.81)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Bolofindes-MacBook-Pro.local', ip: '2601:285:c100:e3d0:90bb:f00d:4542:2f74%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '11.5', java.version: '16.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 94.0.4606.81, chrome: {chromedriverVersion: 94.0.4606.61 (418b78f5838ed..., userDataDir: /var/folders/_t/8jmbmg3x60l...}, goog:chromeOptions: {debuggerAddress: localhost:52271}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 2bb81a98617337aa32ad159a488b4229
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement.lambda$new$0(EventFiringWebDriver.java:404)
at jdk.proxy2/jdk.proxy2.$Proxy10.sendKeys(Unknown Source)
at org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement.sendKeys(EventFiringWebDriver.java:429)
at pages.FileUploadPage.uploadFile(FileUploadPage.java:26)
at alltests.alerts.FileUploadTests.testFileUpload(FileUploadTests.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFileUpload -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.alerts.FileUploadTests@aecb35a]" started-at="2021-10-12T22:54:18 MDT" name="recordTestResults" finished-at="2021-10-12T22:54:18 MDT" duration-ms="412" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFileUpload status=FAILURE method=FileUploadTests.testFileUpload()[pri:0, instance:alltests.alerts.FileUploadTests@aecb35a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.alerts.FileUploadTests@aecb35a]" started-at="2021-10-12T22:54:18 MDT" name="tearDown" finished-at="2021-10-12T22:54:18 MDT" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.alerts.FileUploadTests -->
      <class name="alltests.wait.WaitTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.wait.WaitTests@7ba18f1b]" started-at="2021-10-12T22:53:04 MDT" name="setUp" finished-at="2021-10-12T22:53:06 MDT" duration-ms="1730" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.wait.WaitTests@7ba18f1b]" started-at="2021-10-12T22:53:06 MDT" name="goHome" finished-at="2021-10-12T22:53:09 MDT" duration-ms="2539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testWaitUntilHidden()[pri:0, instance:alltests.wait.WaitTests@7ba18f1b]" started-at="2021-10-12T22:53:09 MDT" name="testWaitUntilHidden" finished-at="2021-10-12T22:53:15 MDT" duration-ms="6131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWaitUntilHidden -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.wait.WaitTests@7ba18f1b]" started-at="2021-10-12T22:53:15 MDT" name="recordTestResults" finished-at="2021-10-12T22:53:15 MDT" duration-ms="425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWaitUntilHidden status=SUCCESS method=WaitTests.testWaitUntilHidden()[pri:0, instance:alltests.wait.WaitTests@7ba18f1b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.wait.WaitTests@7ba18f1b]" started-at="2021-10-12T22:53:15 MDT" name="tearDown" finished-at="2021-10-12T22:53:15 MDT" duration-ms="96" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.wait.WaitTests -->
      <class name="alltests.dropdown.DropdownTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.dropdown.DropdownTests@4bb4de6a]" started-at="2021-10-12T22:52:58 MDT" name="setUp" finished-at="2021-10-12T22:53:01 MDT" duration-ms="3048" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.dropdown.DropdownTests@4bb4de6a]" started-at="2021-10-12T22:53:01 MDT" name="goHome" finished-at="2021-10-12T22:53:03 MDT" duration-ms="2515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSelectOption()[pri:0, instance:alltests.dropdown.DropdownTests@4bb4de6a]" started-at="2021-10-12T22:53:03 MDT" name="testSelectOption" finished-at="2021-10-12T22:53:04 MDT" duration-ms="452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectOption -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.dropdown.DropdownTests@4bb4de6a]" started-at="2021-10-12T22:53:04 MDT" name="recordTestResults" finished-at="2021-10-12T22:53:04 MDT" duration-ms="704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSelectOption status=SUCCESS method=DropdownTests.testSelectOption()[pri:0, instance:alltests.dropdown.DropdownTests@4bb4de6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.dropdown.DropdownTests@4bb4de6a]" started-at="2021-10-12T22:53:04 MDT" name="tearDown" finished-at="2021-10-12T22:53:04 MDT" duration-ms="87" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.dropdown.DropdownTests -->
      <class name="alltests.navigation.NavigationTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.navigation.NavigationTests@1068e947]" started-at="2021-10-12T22:53:21 MDT" name="setUp" finished-at="2021-10-12T22:53:23 MDT" duration-ms="1883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.navigation.NavigationTests@1068e947]" started-at="2021-10-12T22:53:23 MDT" name="goHome" finished-at="2021-10-12T22:53:24 MDT" duration-ms="1326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testNavigator()[pri:0, instance:alltests.navigation.NavigationTests@1068e947]" started-at="2021-10-12T22:53:24 MDT" name="testNavigator" finished-at="2021-10-12T22:53:26 MDT" duration-ms="1824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavigator -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.navigation.NavigationTests@1068e947]" started-at="2021-10-12T22:53:26 MDT" name="recordTestResults" finished-at="2021-10-12T22:53:26 MDT" duration-ms="421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNavigator status=SUCCESS method=NavigationTests.testNavigator()[pri:0, instance:alltests.navigation.NavigationTests@1068e947] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.navigation.NavigationTests@1068e947]" started-at="2021-10-12T22:53:26 MDT" name="goHome" finished-at="2021-10-12T22:53:27 MDT" duration-ms="612" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSwitchTab()[pri:0, instance:alltests.navigation.NavigationTests@1068e947]" started-at="2021-10-12T22:53:27 MDT" name="testSwitchTab" finished-at="2021-10-12T22:53:28 MDT" duration-ms="970" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchTab -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.navigation.NavigationTests@1068e947]" started-at="2021-10-12T22:53:28 MDT" name="recordTestResults" finished-at="2021-10-12T22:53:28 MDT" duration-ms="386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSwitchTab status=SUCCESS method=NavigationTests.testSwitchTab()[pri:0, instance:alltests.navigation.NavigationTests@1068e947] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.navigation.NavigationTests@1068e947]" started-at="2021-10-12T22:53:28 MDT" name="tearDown" finished-at="2021-10-12T22:53:28 MDT" duration-ms="93" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.navigation.NavigationTests -->
      <class name="alltests.exercises.chapter7.contextmenu.ContextMenuTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.exercises.chapter7.contextmenu.ContextMenuTests@b9afc07]" started-at="2021-10-12T22:54:32 MDT" name="setUp" finished-at="2021-10-12T22:54:34 MDT" duration-ms="2049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.exercises.chapter7.contextmenu.ContextMenuTests@b9afc07]" started-at="2021-10-12T22:54:34 MDT" name="goHome" finished-at="2021-10-12T23:04:35 MDT" duration-ms="601663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testRightClick()[pri:0, instance:alltests.exercises.chapter7.contextmenu.ContextMenuTests@b9afc07]" started-at="2021-10-12T23:04:35 MDT" name="testRightClick" finished-at="2021-10-12T23:04:36 MDT" duration-ms="813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightClick -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.exercises.chapter7.contextmenu.ContextMenuTests@b9afc07]" started-at="2021-10-12T23:04:36 MDT" name="recordTestResults" finished-at="2021-10-12T23:04:37 MDT" duration-ms="548" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRightClick status=SUCCESS method=ContextMenuTests.testRightClick()[pri:0, instance:alltests.exercises.chapter7.contextmenu.ContextMenuTests@b9afc07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.exercises.chapter7.contextmenu.ContextMenuTests@b9afc07]" started-at="2021-10-12T23:04:37 MDT" name="tearDown" finished-at="2021-10-12T23:04:37 MDT" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.exercises.chapter7.contextmenu.ContextMenuTests -->
      <class name="alltests.javascript.JavaScriptTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.javascript.JavaScriptTests@543e710e]" started-at="2021-10-12T23:05:13 MDT" name="setUp" finished-at="2021-10-12T23:05:14 MDT" duration-ms="1556" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.javascript.JavaScriptTests@543e710e]" started-at="2021-10-12T23:05:14 MDT" name="goHome" finished-at="2021-10-12T23:05:17 MDT" duration-ms="2381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testScrollToFifthParagraph()[pri:0, instance:alltests.javascript.JavaScriptTests@543e710e]" started-at="2021-10-12T23:05:17 MDT" name="testScrollToFifthParagraph" finished-at="2021-10-12T23:05:17 MDT" duration-ms="718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollToFifthParagraph -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.javascript.JavaScriptTests@543e710e]" started-at="2021-10-12T23:05:17 MDT" name="recordTestResults" finished-at="2021-10-12T23:05:18 MDT" duration-ms="367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScrollToFifthParagraph status=SUCCESS method=JavaScriptTests.testScrollToFifthParagraph()[pri:0, instance:alltests.javascript.JavaScriptTests@543e710e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.javascript.JavaScriptTests@543e710e]" started-at="2021-10-12T23:05:18 MDT" name="goHome" finished-at="2021-10-12T23:05:18 MDT" duration-ms="352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testScrollToTable()[pri:0, instance:alltests.javascript.JavaScriptTests@543e710e]" started-at="2021-10-12T23:05:18 MDT" name="testScrollToTable" finished-at="2021-10-12T23:05:19 MDT" duration-ms="724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollToTable -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.javascript.JavaScriptTests@543e710e]" started-at="2021-10-12T23:05:19 MDT" name="recordTestResults" finished-at="2021-10-12T23:05:19 MDT" duration-ms="208" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScrollToTable status=SUCCESS method=JavaScriptTests.testScrollToTable()[pri:0, instance:alltests.javascript.JavaScriptTests@543e710e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.javascript.JavaScriptTests@543e710e]" started-at="2021-10-12T23:05:19 MDT" name="tearDown" finished-at="2021-10-12T23:05:19 MDT" duration-ms="90" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.javascript.JavaScriptTests -->
      <class name="alltests.exercises.chapter4.passwords.ForgotPasswordTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.exercises.chapter4.passwords.ForgotPasswordTests@5427c60c]" started-at="2021-10-12T23:04:54 MDT" name="setUp" finished-at="2021-10-12T23:04:56 MDT" duration-ms="1799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.exercises.chapter4.passwords.ForgotPasswordTests@5427c60c]" started-at="2021-10-12T23:04:56 MDT" name="goHome" finished-at="2021-10-12T23:04:57 MDT" duration-ms="1319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testRetrievePassword()[pri:0, instance:alltests.exercises.chapter4.passwords.ForgotPasswordTests@5427c60c]" started-at="2021-10-12T23:04:57 MDT" name="testRetrievePassword" finished-at="2021-10-12T23:05:08 MDT" duration-ms="10822" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#content"}
  (Session info: chrome=94.0.4606.81)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Bolofindes-MacBook-Pro.local', ip: '2601:285:c100:e3d0:90bb:f00d:4542:2f74%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '11.5', java.version: '16.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 94.0.4606.81, chrome: {chromedriverVersion: 94.0.4606.61 (418b78f5838ed..., userDataDir: /var/folders/_t/8jmbmg3x60l...}, goog:chromeOptions: {debuggerAddress: localhost:55119}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 76a848a61991525f3cda50c041be6608
*** Element info: {Using=id, value=content}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#content"}
  (Session info: chrome=94.0.4606.81)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Bolofindes-MacBook-Pro.local', ip: '2601:285:c100:e3d0:90bb:f00d:4542:2f74%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '11.5', java.version: '16.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 94.0.4606.81, chrome: {chromedriverVersion: 94.0.4606.61 (418b78f5838ed..., userDataDir: /var/folders/_t/8jmbmg3x60l...}, goog:chromeOptions: {debuggerAddress: localhost:55119}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 76a848a61991525f3cda50c041be6608
*** Element info: {Using=id, value=content}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:105)
at jdk.proxy2/jdk.proxy2.$Proxy9.findElement(Unknown Source)
at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:194)
at pages.EmailSentPage.getMessage(EmailSentPage.java:16)
at alltests.exercises.chapter4.passwords.ForgotPasswordTests.testRetrievePassword(ForgotPasswordTests.java:14)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetrievePassword -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.exercises.chapter4.passwords.ForgotPasswordTests@5427c60c]" started-at="2021-10-12T23:05:08 MDT" name="recordTestResults" finished-at="2021-10-12T23:05:08 MDT" duration-ms="133" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRetrievePassword status=FAILURE method=ForgotPasswordTests.testRetrievePassword()[pri:0, instance:alltests.exercises.chapter4.passwords.ForgotPasswordTests@5427c60c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.exercises.chapter4.passwords.ForgotPasswordTests@5427c60c]" started-at="2021-10-12T23:05:08 MDT" name="tearDown" finished-at="2021-10-12T23:05:08 MDT" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.exercises.chapter4.passwords.ForgotPasswordTests -->
      <class name="alltests.exercises.chapter6.slider.SliderTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.exercises.chapter6.slider.SliderTests@6483f5ae]" started-at="2021-10-12T22:54:27 MDT" name="setUp" finished-at="2021-10-12T22:54:29 MDT" duration-ms="1984" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.exercises.chapter6.slider.SliderTests@6483f5ae]" started-at="2021-10-12T22:54:29 MDT" name="goHome" finished-at="2021-10-12T22:54:30 MDT" duration-ms="1329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSlideToWholeNumber()[pri:0, instance:alltests.exercises.chapter6.slider.SliderTests@6483f5ae]" started-at="2021-10-12T22:54:30 MDT" name="testSlideToWholeNumber" finished-at="2021-10-12T22:54:31 MDT" duration-ms="812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSlideToWholeNumber -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.exercises.chapter6.slider.SliderTests@6483f5ae]" started-at="2021-10-12T22:54:31 MDT" name="recordTestResults" finished-at="2021-10-12T22:54:32 MDT" duration-ms="465" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSlideToWholeNumber status=SUCCESS method=SliderTests.testSlideToWholeNumber()[pri:0, instance:alltests.exercises.chapter6.slider.SliderTests@6483f5ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.exercises.chapter6.slider.SliderTests@6483f5ae]" started-at="2021-10-12T22:54:32 MDT" name="tearDown" finished-at="2021-10-12T22:54:32 MDT" duration-ms="88" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.exercises.chapter6.slider.SliderTests -->
      <class name="alltests.hover.HoverTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:alltests.hover.HoverTests@2f8f5f62]" started-at="2021-10-12T22:53:15 MDT" name="setUp" finished-at="2021-10-12T22:53:17 MDT" duration-ms="1974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alltests.hover.HoverTests@2f8f5f62]" started-at="2021-10-12T22:53:17 MDT" name="goHome" finished-at="2021-10-12T22:53:20 MDT" duration-ms="2312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testHoverUser1()[pri:0, instance:alltests.hover.HoverTests@2f8f5f62]" started-at="2021-10-12T22:53:20 MDT" name="testHoverUser1" finished-at="2021-10-12T22:53:20 MDT" duration-ms="700" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Caption not displayed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Caption not displayed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at alltests.hover.HoverTests.testHoverUser1(HoverTests.java:14)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHoverUser1 -->
        <test-method is-config="true" signature="recordTestResults(org.testng.ITestResult)[pri:0, instance:alltests.hover.HoverTests@2f8f5f62]" started-at="2021-10-12T22:53:20 MDT" name="recordTestResults" finished-at="2021-10-12T22:53:21 MDT" duration-ms="503" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHoverUser1 status=FAILURE method=HoverTests.testHoverUser1()[pri:0, instance:alltests.hover.HoverTests@2f8f5f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordTestResults -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alltests.hover.HoverTests@2f8f5f62]" started-at="2021-10-12T22:53:21 MDT" name="tearDown" finished-at="2021-10-12T22:53:21 MDT" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alltests.hover.HoverTests -->
      <class name="apitests.ArticleTests">
        <test-method signature="getAallArticles()[pri:0, instance:apitests.ArticleTests@3d0f8e03]" started-at="2021-10-12T23:05:26 MDT" name="getAallArticles" finished-at="2021-10-12T23:05:28 MDT" duration-ms="1881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAallArticles -->
        <test-method signature="login()[pri:0, instance:apitests.ArticleTests@3d0f8e03]" started-at="2021-10-12T23:05:28 MDT" name="login" finished-at="2021-10-12T23:05:31 MDT" duration-ms="2968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="testCreateArticle()[pri:0, instance:apitests.ArticleTests@3d0f8e03]" started-at="2021-10-12T23:05:31 MDT" name="testCreateArticle" finished-at="2021-10-12T23:05:31 MDT" duration-ms="841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateArticle -->
      </class> <!-- apitests.ArticleTests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
